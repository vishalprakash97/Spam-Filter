AWSTemplateFormatVersion: 2010-09-09
Description: Email Spam Detector
Parameters:
    S3Name:
        Type: String
        Default: a3-email-bucket-cf
    LambdaName:
        Type: "String"
        Default: "spam-filter-cf"
    ReceiptRuleSetName:
        Type: "String"
        Default: "a3-email-ruleset-cf"
    EndPointName:
        Type: "String"
        Default: 'sms-spam-classifier-mxnet-2022-11-29-00-34-48-632'

Resources:
    S3Bucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Ref S3Name
            AccessControl: "PublicReadWrite"
            NotificationConfiguration:
                LambdaConfigurations:
                  - Event: s3:ObjectCreated:Put
                    Function: "arn:aws:lambda:us-east-1:019281413155:function:spam-filter-cf"
                
    ExampleInvokePermission:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName: !Ref LambdaName
            Action: lambda:InvokeFunction
            Principal: s3.amazonaws.com
            SourceArn: !GetAtt S3Bucket.Arn
            
    Lambda:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "Lambda to Read Emails"
            FunctionName: !Ref LambdaName
            Handler: "spamfilter.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "spamfilterlambda"
                S3Key: "spamfilter.zip"
            MemorySize: 128
            Role: !GetAtt IAMSpamFilter.Arn
            Runtime: "python3.9"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:336392948345:layer:AWSSDKPandas-Python39:1"
            EphemeralStorage: 
                Size: 512
            Environment:
                Variables:
                    endpoint: !Ref EndPointName
                
    IAMSpamFilter:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "spam-filter-role-cf"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Sub "arn:aws:iam::${AWS::AccountId}:policy/service-role/AWSLambdaBasicExecutionRole-cd45ba3a-26f8-48c8-ba25-ffadfc202788"
              - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
              - "arn:aws:iam::aws:policy/AmazonSESFullAccess"
              - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
    
    S3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref S3Name
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                  - Action:
                      - 's3:GetObject'
                    Effect: Allow
                    Resource: !Join
                        - ''
                        - - 'arn:aws:s3:::'
                          - !Ref S3Name
                          - /*
                    Principal: '*'
                  -
                    Sid: AllowSESPuts
                    Effect: Allow
                    Principal:
                      Service: ses.amazonaws.com
                    Action: s3:PutObject
                    Resource: 
                      Fn::Join: 
                      - ""
                      - 
                        - "arn:aws:s3:::"
                        - 
                          Ref: S3Bucket
                        - "/*"
                    Condition:
                      StringEquals:
                        aws:Referer: '336392948345'
    ReceiptRuleSet:
        Type: 'AWS::SES::ReceiptRuleSet'
        Properties:
            RuleSetName: !Ref ReceiptRuleSetName
    SesRule:
        Type: 'AWS::SES::ReceiptRule'
        Properties:
            Rule:
                Actions:
                  - S3Action:
                        BucketName: !Ref S3Bucket
                Enabled: true
                ScanEnabled: false
            RuleSetName: !Ref ReceiptRuleSet